{"ast":null,"code":"var _jsxFileName = \"/home/shelb/Development/code/phase-5/NookTracker/app/src/Bugs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Bugs() {\n  _s();\n  const [bugs, setBugs] = useState([]);\n  useEffect(() => {\n    fetch(\"/lists/bugs\").then(response => response.json()).then(bugs => setBugs(bugs));\n  }, []);\n  // const addBugClick = () => {\n  //     fetch(\"/list\", {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\":\"application/json\",\n  //         },\n  //         body:JSON.stringify(bug)\n  //       })\n  //       .then((r)=>r.json())\n  //       .then((newRoute)=>{\n  //         setAllRoutes((prevRouteList)=>[...prevRouteList,newRoute])\n  //       } )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), bugs.map(bug => /*#__PURE__*/_jsxDEV(BugItem, {\n      bug: bug\n    }, bug.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Bugs, \"zRWnMpXIGAgSYQwuKV5cUawekOk=\");\n_c = Bugs;\nconst BugItem = _ref => {\n  let {\n    bug\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: bug.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bug.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addBugClick,\n      children: \"Add bug to list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 1\n  }, this);\n};\n_c2 = BugItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"Bugs\");\n$RefreshReg$(_c2, \"BugItem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bugs","_s","bugs","setBugs","fetch","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bug","BugItem","id","_c","_ref","title","src","image","onClick","addBugClick","_c2","$RefreshReg$"],"sources":["/home/shelb/Development/code/phase-5/NookTracker/app/src/Bugs.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nexport function Bugs() {\n    const [bugs, setBugs] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/lists/bugs\")\n        .then((response) => response.json())\n        .then((bugs) => setBugs(bugs));\n\n}, []);\n// const addBugClick = () => {\n//     fetch(\"/list\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\":\"application/json\",\n//         },\n//         body:JSON.stringify(bug)\n//       })\n//       .then((r)=>r.json())\n//       .then((newRoute)=>{\n//         setAllRoutes((prevRouteList)=>[...prevRouteList,newRoute])\n//       } )\n// }\n\nreturn (\n    <section>\n        <h1>List of bugs</h1>\n        {bugs.map((bug) => (\n            <BugItem key={bug.id} bug={bug} />\n        ))}\n        </section>\n)}\nconst BugItem = ({bug}) => {\n    return (\n<div>\n    <p>{bug.title}</p>\n    <img src={bug.image} />\n    <button onClick={addBugClick}>Add bug to list</button>\n</div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,aAAa,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EAEtC,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIH,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,IAAI,CAACW,GAAG,CAAEC,GAAG,iBACVf,OAAA,CAACgB,OAAO;MAAcD,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AACjB;AAACX,EAAA,CA9BcD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AA+BpB,MAAMe,OAAO,GAAGG,IAAA,IAAW;EAAA,IAAV;IAACJ;EAAG,CAAC,GAAAI,IAAA;EAClB,oBACJnB,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAIM,GAAG,CAACK;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAKqB,GAAG,EAAEN,GAAG,CAACO;IAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBb,OAAA;MAAQuB,OAAO,EAAEC,WAAY;MAAAf,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEN,CAAC;AAAAY,GAAA,GARKT,OAAO;AAAA,IAAAE,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}