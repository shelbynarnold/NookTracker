{"ast":null,"code":"var _jsxFileName = \"/home/shelb/Development/code/phase-5/NookTracker/app/src/Bugs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Bugs() {\n  _s();\n  const [bugs, setBugs] = useState([]);\n  useEffect(() => {\n    fetch(\"/lists/bugs\").then(response => response.json()).then(bugs => setBugs(bugs));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), bugs.map(bug => /*#__PURE__*/_jsxDEV(BugItem, {\n      bug: bug\n    }, bug.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Bugs, \"zRWnMpXIGAgSYQwuKV5cUawekOk=\");\n_c = Bugs;\nconst BugItem = _ref => {\n  let {\n    bug\n  } = _ref;\n  return console.log(Bugs);\n};\n_c2 = BugItem;\nconst addBugClick = () => {\n  fetch(\"/list\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(Bugs)\n  }).then(r => r.json()).then(newRoute => {\n    setAllRoutes(prevRouteList => [...prevRouteList, newRoute]);\n  });\n};\n/*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: bug.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: bug.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: addBugClick,\n    children: \"Add bug to list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this);\nvar _c, _c2;\n$RefreshReg$(_c, \"Bugs\");\n$RefreshReg$(_c2, \"BugItem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bugs","_s","bugs","setBugs","fetch","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bug","BugItem","id","_c","_ref","console","log","_c2","addBugClick","method","headers","body","JSON","stringify","r","newRoute","setAllRoutes","prevRouteList","title","src","image","onClick","$RefreshReg$"],"sources":["/home/shelb/Development/code/phase-5/NookTracker/app/src/Bugs.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nexport function Bugs() {\n    const [bugs, setBugs] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/lists/bugs\")\n        .then((response) => response.json())\n        .then((bugs) => setBugs(bugs));\n\n}, []);\n\nreturn (\n    <section>\n        <h1>List of bugs</h1>\n        {bugs.map((bug) => (\n            <BugItem key={bug.id} bug={bug} />\n        ))}\n        </section>\n)}\n\nconst BugItem = ({bug}) =>\nconsole.log(Bugs)\nconst addBugClick = () => {\n    fetch(\"/list\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\":\"application/json\",\n        },\n        body:JSON.stringify(Bugs)\n      })\n      .then((r)=>r.json())\n      .then((newRoute)=>{\n        setAllRoutes((prevRouteList)=>[...prevRouteList,newRoute])\n      } )\n}\n    <div>\n        <p>{bug.title}</p>\n        <img src={bug.image} />\n        <button onClick={addBugClick}>Add bug to list</button>\n    </div>"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,aAAa,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EAEtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIH,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,IAAI,CAACW,GAAG,CAAEC,GAAG,iBACVf,OAAA,CAACgB,OAAO;MAAcD,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AACjB;AAACX,EAAA,CAjBcD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAmBpB,MAAMe,OAAO,GAAGG,IAAA;EAAA,IAAC;IAACJ;EAAG,CAAC,GAAAI,IAAA;EAAA,OACtBC,OAAO,CAACC,GAAG,CAACpB,IAAI,CAAC;AAAA;AAAAqB,GAAA,GADXN,OAAO;AAEb,MAAMO,WAAW,GAAGA,CAAA,KAAM;EACtBlB,KAAK,CAAC,OAAO,EAAE;IACXmB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC3B,IAAI;EAC1B,CAAC,CAAC,CACDK,IAAI,CAAEuB,CAAC,IAAGA,CAAC,CAACrB,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAAEwB,QAAQ,IAAG;IAChBC,YAAY,CAAEC,aAAa,IAAG,CAAC,GAAGA,aAAa,EAACF,QAAQ,CAAC,CAAC;EAC5D,CAAE,CAAC;AACT,CAAC;AACG,aAAA9B,OAAA;EAAAS,QAAA,gBACIT,OAAA;IAAAS,QAAA,EAAIM,GAAG,CAACkB;EAAK;IAAAvB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAClBb,OAAA;IAAKkC,GAAG,EAAEnB,GAAG,CAACoB;EAAM;IAAAzB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACvBb,OAAA;IAAQoC,OAAO,EAAEb,WAAY;IAAAd,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACrD,CAAC;AAAA,IAAAK,EAAA,EAAAI,GAAA;AAAAe,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAf,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}