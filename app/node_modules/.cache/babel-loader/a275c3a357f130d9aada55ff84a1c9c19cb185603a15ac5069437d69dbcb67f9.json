{"ast":null,"code":"var _jsxFileName = \"/home/shelb/Development/code/phase-5/NookTracker/app/src/List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists);\n  const [allLists, setAllLists] = useState([]);\n  useEffect(() => {\n    fetch(\"/list\").then(r => r.json()).then(lists => setAllLists(lists));\n  }, []);\n  const displayLists = allLists.map(post => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  });\n};\n_s(List, \"iOg7JHi582cl96y8XvefoFylews=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","jsxDEV","_jsxDEV","List","_s","title","setTitle","dispatch","lists","state","allLists","setAllLists","fetch","then","r","json","displayLists","map","post","children","list","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shelb/Development/code/phase-5/NookTracker/app/src/List.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const List = () => {\n    const [title, setTitle] = useState(\"\");\n    const dispatch = useDispatch();\n    const lists = useSelector ((state) => state.lists);\n    const [allLists, setAllLists] = useState([]);\n    useEffect(() => {\n        fetch(\"/list\")\n        .then(r=>r.json())\n        .then(lists=>setAllLists(lists))\n    },[])\n\nconst displayLists = allLists.map((post) => {\n    return (\n        <div>\n            <p>{list.title}</p>\n        </div>\n    )\n})\n\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,WAAW,CAAGS,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAClD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,OAAO,CAAC,CACbC,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjBF,IAAI,CAACL,KAAK,IAAEG,WAAW,CAACH,KAAK,CAAC,CAAC;EACpC,CAAC,EAAC,EAAE,CAAC;EAET,MAAMQ,YAAY,GAAGN,QAAQ,CAACO,GAAG,CAAEC,IAAI,IAAK;IACxC,oBACIhB,OAAA;MAAAiB,QAAA,eACIjB,OAAA;QAAAiB,QAAA,EAAIC,IAAI,CAACf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEd,CAAC,CAAC;AAGF,CAAC;AAAApB,EAAA,CApBYD,IAAI;EAAA,QAEIJ,WAAW,EACdC,WAAW;AAAA;AAAAyB,EAAA,GAHhBtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}