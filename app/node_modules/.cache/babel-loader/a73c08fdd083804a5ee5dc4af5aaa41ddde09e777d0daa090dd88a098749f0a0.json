{"ast":null,"code":"var _jsxFileName = \"/home/shelb/Development/code/phase-5/NookTracker/app/src/Bugs.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Bugs() {\n  _s();\n  const [bugs, setBugs] = useState([]);\n  useEffect(() => {\n    fetch(\"/lists/bugs\").then(response => response.json()).then(bugs => setBugs(bugs));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), bugs.map(bug => /*#__PURE__*/_jsxDEV(BugItem, {\n      bug: bug\n    }, bug.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Bugs, \"zRWnMpXIGAgSYQwuKV5cUawekOk=\");\n_c = Bugs;\nconst BugItem = _ref => {\n  _s2();\n  let {\n    bug\n  } = _ref;\n  const [list, setList] = useState([]);\n  const addBugClick = bug => {\n    const newBugObj = {\n      item_id: bug.id,\n      title: noTitle\n    };\n    fetch(\"/list\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newBugObj)\n    }).then(r => r.json()).then(newRoute => {\n      setList(prevRouteList => [...prevRouteList, newRoute]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: bug.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bug.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addBugClick(bug),\n      children: \"Add bug to list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 1\n  }, this);\n};\n_s2(BugItem, \"5B5creADs30R66wN/2t9GZl+br4=\");\n_c2 = BugItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"Bugs\");\n$RefreshReg$(_c2, \"BugItem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bugs","_s","bugs","setBugs","fetch","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bug","BugItem","id","_c","_ref","_s2","list","setList","addBugClick","newBugObj","item_id","title","noTitle","method","headers","body","JSON","stringify","r","newRoute","prevRouteList","src","image","onClick","_c2","$RefreshReg$"],"sources":["/home/shelb/Development/code/phase-5/NookTracker/app/src/Bugs.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nexport function Bugs() {\n    const [bugs, setBugs] = useState([]);\n    useEffect(() => {\n        fetch(\"/lists/bugs\")\n        .then((response) => response.json())\n        .then((bugs) => setBugs(bugs));\n\n}, []);\n\n\nreturn (\n    <section>\n        <h1>List of bugs</h1>\n        {bugs.map((bug) => (\n            <BugItem key={bug.id} bug={bug} />\n        ))}\n        </section>\n)}\nconst BugItem = ({bug}) => {\n    const [list, setList] = useState([])\n    const addBugClick = (bug) => {\n        \n        const newBugObj = {\n            item_id:bug.id, \n            title: (noTitle)\n            }\n            \n            fetch(\"/list\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\":\"application/json\",\n                  },\n                  body:JSON.stringify(newBugObj)\n                })\n                .then((r)=>r.json())\n                .then((newRoute)=>{\n                  setList((prevRouteList)=>[...prevRouteList,newRoute])\n                } )\n    }\n    return (\n<div>\n    <p>{bug.title}</p>\n    <img src={bug.image} />\n    <button onClick={()=>addBugClick(bug)}>Add bug to list</button>\n</div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,aAAa,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EAEtC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIH,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,IAAI,CAACW,GAAG,CAAEC,GAAG,iBACVf,OAAA,CAACgB,OAAO;MAAcD,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AACjB;AAACX,EAAA,CAjBcD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAkBpB,MAAMe,OAAO,GAAGG,IAAA,IAAW;EAAAC,GAAA;EAAA,IAAV;IAACL;EAAG,CAAC,GAAAI,IAAA;EAClB,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM0B,WAAW,GAAIR,GAAG,IAAK;IAEzB,MAAMS,SAAS,GAAG;MACdC,OAAO,EAACV,GAAG,CAACE,EAAE;MACdS,KAAK,EAAGC;IACR,CAAC;IAEDtB,KAAK,CAAC,OAAO,EAAE;MACTuB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAC;MACjB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACR,SAAS;IAC/B,CAAC,CAAC,CACDlB,IAAI,CAAE2B,CAAC,IAAGA,CAAC,CAACzB,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAAE4B,QAAQ,IAAG;MAChBZ,OAAO,CAAEa,aAAa,IAAG,CAAC,GAAGA,aAAa,EAACD,QAAQ,CAAC,CAAC;IACvD,CAAE,CAAC;EACf,CAAC;EACD,oBACJlC,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAIM,GAAG,CAACW;IAAK;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAKoC,GAAG,EAAErB,GAAG,CAACsB;IAAM;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBb,OAAA;MAAQsC,OAAO,EAAEA,CAAA,KAAIf,WAAW,CAACR,GAAG,CAAE;MAAAN,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEN,CAAC;AAAAO,GAAA,CA5BKJ,OAAO;AAAAuB,GAAA,GAAPvB,OAAO;AAAA,IAAAE,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}