{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const List = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists);\n  const [allLists, setAllLists] = useState([]);\n  useEffect(() => {\n    fetch(\"/list\").then(r => r.json()).then(lists => setAllLists(lists));\n  }, []);\n};\n_s(List, \"iOg7JHi582cl96y8XvefoFylews=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","List","_s","title","setTitle","dispatch","lists","state","allLists","setAllLists","fetch","then","r","json","_c","$RefreshReg$"],"sources":["/home/shelb/Development/code/phase-5/NookTracker/app/src/List.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const List = () => {\n    const [title, setTitle] = useState(\"\");\n    const dispatch = useDispatch();\n    const lists = useSelector ((state) => state.lists);\n    const [allLists, setAllLists] = useState([]);\n    useEffect(() => {\n        fetch(\"/list\")\n        .then(r=>r.json())\n        .then(lists=>setAllLists(lists))\n    },[])\n\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,KAAK,GAAGN,WAAW,CAAGO,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAClD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,OAAO,CAAC,CACbC,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjBF,IAAI,CAACL,KAAK,IAAEG,WAAW,CAACH,KAAK,CAAC,CAAC;EACpC,CAAC,EAAC,EAAE,CAAC;AAET,CAAC;AAAAJ,EAAA,CAXYD,IAAI;EAAA,QAEIF,WAAW,EACdC,WAAW;AAAA;AAAAc,EAAA,GAHhBb,IAAI;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}